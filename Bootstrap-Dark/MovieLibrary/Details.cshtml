@using System.Text.RegularExpressions
@using MPExtended.Services.MediaAccessService.Interfaces.Movie
@model MovieViewModel
@{
  ViewBag.Title = Model.Movie.Title;
  ViewBag.showTitle = false;
}

@if(Model.Movie.FanartCount > 1)
{
  <script type="text/javascript">
  $(document).ready(function () {
      $('.carousel').carousel({
          interval: 10000
      });
  });
  </script> 
}

<div class="watched-container">
<div id="fanartheader" class="carousel slide hidden-phone">
  <div class="carousel-inner">
    @if(Model.Movie.FanartCount <= 1)
    {
      <div class="active item">
        <img src='@Url.ContentLink("Images/default/fanart.png")' data-original='@Url.Action("Fanart", new { movie = Model.Id, width = 1170})' width="100%" height="100%" />
      </div>
    }
    else
    {
      <div class="active item">
        <img src='@Url.Action("Fanart", new { movie = Model.Id, width = 1170})' width="100%" height="100%" />
      </div>
      for(int i = 1; i < Model.Movie.FanartCount; i++)
      {
        <div class="item">
          <img src='@Url.Action("Fanart", new { movie = Model.Id, width = 1170, num = i})' width="100%" height="100%" />
        </div>
      }
    }
  </div>
  <div class="carousel-caption">
    <h1>@Model.Movie.Title</h1>
    <p class="lead">@Model.Movie.Tagline</p>
  </div>
</div>
    @if(Model.Movie.Watched)
    {
      <img class="watched" src='~/content/images/watched.png' alt="Watched" />
    }
</div>

<div class="page-header visible-phone"><h1>@(ViewBag.Title != null ? ViewBag.Title : UIStrings.Welcome)</h1></div>

<div class="row-fluid">
  <div class="span8">
    <ul class="breadcrumb">
      <li><a href='@Url.Action("Index", "MovieLibrary", new { })'>@UIStrings.Movies</a> <span class="divider">/</span></li>
      <li class="active">@Model.Movie.Title</li>
    </ul>

    <div class="tabbable tabs-left">
      <ul class="nav nav-tabs">
        <li class="active"><a href="#summary" data-toggle="tab">Summary</a></li>
        <li><a href="#details" data-toggle="tab">Details</a></li>
        <li><a href="#actors" data-toggle="tab">Actors</a></li>
        <li><a href="#fileinfo" data-toggle="tab">File information</a></li>
        @if (!string.IsNullOrEmpty(Model.Movie.Awards) && Model.Movie.Awards != "unknown")
        {
          <li><a href="#awards" data-toggle="tab">Awards</a></li>
        }
        <li><a href="#mpaa" data-toggle="tab">MPAA</a></li>
      </ul>

      <div class="tab-content">

        <div class="tab-pane fade active in" id="summary">
          <dl class="dl-horizontal">
            <p>@Model.Movie.Summary</p>
            <p>Rating: <b>@Model.Movie.MPAARating</b></p>
          </dl>
        </div>

        <div class="tab-pane fade" id="details">
          <dl class="dl-horizontal">
            <dt>Year:</dt>
            <dd>@Model.Movie.Year</dd>
            <dt>Runtime:</dt>
            <dd>@Model.Movie.Runtime min.</dd>
            <dt>@UIStrings.Rating:</dt>
            <dd>@Model.Movie.Rating.ToString("##.0")</dd>
            <dt>Director:</dt>
            <dd>
              <ul>
                @foreach (string director in Model.Movie.Directors)
                {
                  <li><a target="_blank" href="http://www.imdb.com/find?q=@director">@director</a></li>
                }
              </ul>
            </dd>
            <dt>@UIStrings.WrittenBy</dt>
            <dd>
              <ul>
                @foreach (string writer in Model.Movie.Writers)
                {
                  <li><a target="_blank" href="http://www.imdb.com/find?q=@writer">@writer</a></li>
                }
              </ul>
            </dd>
            @if (Model.Movie.Genres.Count > 0)
            {
              <dt>Genres:</dt>
              <dd>
                <ul>
                  @foreach (string genre in Model.Movie.Genres)
                  {
                    <li><a href='@Url.Action("Index", "MovieLibrary", new { filter = "Genres*=" + genre + "" })'>@genre</a></li>
                  }
                </ul>
              </dd>
            }
            @if (Model.Movie.Collections.Count > 0)
            {
              <dt>Collections:</dt>
              <dd>
                <ul>
                  @foreach (string collection in Model.Movie.Collections)
                  {
                    <li><a href='@Url.Action("Collection", "MovieLibrary", new { collection = collection })'>@collection</a></li>
                  }
                </ul>
              </dd>
            }
            @if (Model.Movie.Groups.Count > 0)
            {
              <dt>Groups:</dt>
              <dd>
                <ul>
                  @foreach (string group in Model.Movie.Groups)
                  {
                    <li><a href='@Url.Action("Index", "MovieLibrary", new { filter = "Groups*=" + group + "" })'>@group</a></li>
                  }
                </ul>
              </dd>
            }
            <dt>Watched:</dt>
            <dd>
              @if (Model.Movie.Watched)
              {
                @UIStrings.Yes;
              }
              else
              {
                @UIStrings.No;
              }
            </dd>
          </dl>
        </div>

        <div class="tab-pane fade" id="actors">
          <dl class="dl-horizontal">
            <dt>Actors:</dt>
            <dd>
              <ul>
                @foreach (WebMovieActor actor in Model.Movie.Actors)
                {
                  <li><a href='@Url.Action("Actor", "MovieLibrary", new { actor = actor.Title })'>@actor.Title</a></li>
                }
              </ul>
            </dd>
          </dl>
        </div>

        <div class="tab-pane fade" id="fileinfo">
          <dl class="dl-horizontal">
            <dt>Filesize:</dt>
            <dd>@(((float)Model.FileInfo.Size / 1073741824).ToString("0.00")) GB</dd>
            <dt>Video:</dt>
            <dd>
              @foreach (var videoStream in Model.MediaInfo.VideoStreams)
              {
                <text>@videoStream.Width x @videoStream.Height, @Model.Quality</text>
              }
            </dd>
            <dt>Audio:</dt>
            <dd>
              @foreach (var audioStream in Model.MediaInfo.AudioStreams)
              {
                <text>@audioStream.LanguageFull (@audioStream.Codec)</text>
              }
            </dd>
            <dt>Directory:</dt>
            <dd>@Model.FileInfo</dd>
          </dl>
        </div>

        @if (!string.IsNullOrEmpty(Model.Movie.Awards) && Model.Movie.Awards != "unknown")
        {
          <div class="tab-pane fade" id="awards">
            <p style="white-space: pre-line">@MvcHtmlString.Create(Model.Movie.Awards.Replace("Awards:", "<br /><b>Awards:</b>").Replace("Nominated:", "<br />Nominated:"))</p>
          </div>
        }

        <div class="tab-pane fade" id="mpaa">
          <dl class="dl-horizontal">
            <dt>Rating:</dt>
            <dd>@Model.Movie.MPAARating</dd>
          </dl>
          <dl class="dl-horizontal">
            <dt>Guide:</dt>
            @if (!string.IsNullOrEmpty(Model.Movie.MPAAText))
            {
              <dd>@MvcHtmlString.Create(Regex.Replace(Model.Movie.MPAAText, @"\*(.+?)\n", "<br /><b>$1</b><br />"))</dd>
            }
            else
            {
              <dd></dd>
            }
          </dl>
        </div>
      </div>
  </div>
</div>

<div class="span4">
  <div class="span12 row center">
    <img class="img-polaroid img-rounded" src='@Url.Action("Cover", new { movie = @Model.Id, width = 250 })' width="250" alt="No image" />
  </div>

  <div class="span12 row center">
    <div class="ratingstar center"><div style='width: @(Model.Movie.Rating*10)%'></div></div>
  </div>

  <div class="btn-toolbar center">
    <div class="btn-group">
      @{
        if (!string.IsNullOrEmpty(Model.Movie.IMDBId))
        {
          <a class="btn" target="_blank" href="http://www.imdb.com/title/@Model.Movie.IMDBId" title="IMDB"><i class="icon-info-sign"></i></a>
          <a class="btn" target="_blank" href="https://www.youtube.com/results?search_query=@Model.Movie.IMDBId" title="Youtube"><i class="icon-facetime-video"></i></a>
        }
      }
      <a class="btn" href='@Url.Action("Download", "Stream", new { item = Model.Id, type = Model.Movie.Type })'><i class="icon-download-alt"></i> @UIStrings.Download</a>
      <a class="btn" href='@Url.Action("Play", new { movie = Model.Id })'><i class="icon-play"></i> @UIStrings.Play</a>
    </div>
  </div>
</div>
</div>